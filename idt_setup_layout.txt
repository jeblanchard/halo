given some handler, install_ir will generate asm?

maintain an array of interrupt handler addresses in order
to ensure nothing gets overwritten

create a file that has 256 interrupt handlers explicitly
declared

how do i generate the correct asm for each interrupt? solved.

do i force each device to generate its own asm? this seems
to be the best option right now. solved.

now each handler doesn't have to generate its own asm
and only needs to provide the core logic. what now?

devices calling interrupts can use the
execute_handler function within their
own function that they provide to the
IDT

i can manually assign an interrupt
handler to each slot in the IDT

each IDT slot will have a function that
uses execute_interrupt_handler() to call
a function address that is stored in
an interrupt handler array

have a function that adds all the default
handlers to the IDT

what if each handler i write i do so
in assembly?

why do i have handlers in assembly anyway?
because C does stuff when it calls a function
that i can't fully predict, and it would be
tedious / risky to do so.



